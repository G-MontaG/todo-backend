version: "3"
services:
  nginx:
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
    image: gmontag/todo-nginx
    links:
      - node
      - swagger-ui
    ports:
      - "80:80"
      - "3000:3000"
    networks:
      - web
    deploy:
      replicas: 1
      # resources:
      #   limits:
      #     cpus: "0.1"
      #     memory: 300M
      restart_policy:
        condition: on-failure
        max_attempts: 3
  node:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: gmontag/todo-node
    links:
      - mongo
    env_file:
      - ./node.env
    environment:
      - SERVER_PORT=3001
      - NODE_ENV=development
    ports:
      - "9229:9229"
    networks:
      - web
      - server
    volumes:
      - ./compiled:/home/node/compiled
    deploy:
      replicas: 1
      # resources:
      #   limits:
      #     cpus: "0.7"
      #     memory: 300M
      restart_policy:
        condition: on-failure
        max_attempts: 3
      update_config:
        parallelism: 2
        delay: 10s
  swagger-ui:
    image: swaggerapi/swagger-ui
    environment:
      - BASE_URL=/swagger
      - SWAGGER_JSON=/swagger-config/swagger.json
    volumes:
      - ./swagger-config:/swagger-config
    networks:
      - web
    deploy:
      replicas: 1
      # resources:
      #   limits:
      #     cpus: "0.1"
      #     memory: 300M
      restart_policy:
        condition: on-failure
        max_attempts: 3
      update_config:
        parallelism: 2
        delay: 10s
  mongo:
    image: mongo
    networks:
      - server
    deploy:
      replicas: 1
      # resources:
      #   limits:
      #     cpus: "0.1"
      #     memory: 300M
      restart_policy:
        condition: on-failure
        max_attempts: 3
networks:
  web:
  server: